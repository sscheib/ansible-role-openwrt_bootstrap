---
- name: 'Ensure variables are defined properly'
  ansible.builtin.assert:
    that:
      # _bts_update_opkg_cache  # nospell
      - '_bts_update_opkg_cache is defined'
      - '_bts_update_opkg_cache is boolean'

      # _bts_install_full_python  # nospell
      - '_bts_install_full_python is defined'
      - '_bts_install_full_python is boolean'

      # _bts_minimal_required_packages  # nospell
      - '_bts_minimal_required_packages is defined'
      - '_bts_minimal_required_packages is not string'
      - '_bts_minimal_required_packages is not mapping'
      - '_bts_minimal_required_packages is iterable'
      - '_bts_minimal_required_packages | list | string == _bts_minimal_required_packages | string'
      - '_bts_minimal_required_packages | length > 0'

      # _bts_full_required_packages  # nospell
      - '_bts_full_required_packages is defined'
      - '_bts_full_required_packages is not string'
      - '_bts_full_required_packages is not mapping'
      - '_bts_full_required_packages is iterable'
      - '_bts_full_required_packages | list | string == _bts_full_required_packages | string'
      - '_bts_full_required_packages | length > 0'

    success_msg: 'Variables are defined properly'
    fail_msg: 'One or more variables failed to validate'

- name: 'Ensure opkg cache is up to date'
  ansible.builtin.raw: '/bin/opkg update'
  args:
    executable: '/bin/ash'
  changed_when: 'false'
  when: '_bts_update_opkg_cache'

- name: 'Install required packages for Ansible to work'
  ansible.builtin.raw: >-
    /bin/opkg install {{ __t_packages }}
  args:
    executable: '/bin/ash'
  vars:
    __t_packages: >-
      {{
        (
          _bts_install_full_python is defined
          and _bts_install_full_python
        ) | ansible.builtin.ternary(
          _bts_full_required_packages,
          _bts_minimal_required_packages
        ) | join(' ')
      }}
  register: '__t_opkg_install'
  changed_when: >-
    __t_opkg_install.stdout_lines |
    reject('match', '^.+is up to date.$') |
    length > 0
...
